[gd_resource type="Shader" format=2]

[resource]
code = "shader_type canvas_item;

uniform float angle;
uniform float size = 80.0;

mat2 getMatrix2(float a){
	return mat2 (vec2( cos(a), sin(a) ), vec2(-sin(a),cos(a)));
}
mat2 getMatrix2x(float a){
	return mat2 (vec2( 1.0, 0.0 ), vec2( 0.0, cos(a) ));
}
mat2 getMatrix2xx(float a){
	return mat2 (vec2( 0.0, 1.0 ), vec2( cos(a), 0.0 ));
}
mat3 getMatrix3x(float a){
	return mat3(vec3(1.0, 0.0, 0.0), vec3(0.0, cos(a), sin(a)), vec3(0.0, -sin(a), cos(a)));
}
mat3 getMatrix3y(float a){
	return mat3(vec3(cos(a), 0.0, -sin(a)), vec3(0.0, 1.0, 0.0), vec3(sin(a), 0.0, cos(a)));
}
mat3 getMatrix3z(float a){
	return mat3(vec3(cos(a), sin(a), 0.0), vec3(-sin(a), cos(a), 0.0), vec3(0.0, 0.0, 1.0));
}
void vertex() {
	VERTEX -= size/2.0;
//	VERTEX *= getMatrix2x(3.1415*cos(TIME/4.0));
	VERTEX *= getMatrix2x(3.1415*angle);
	VERTEX += size/2.0;
}
"
